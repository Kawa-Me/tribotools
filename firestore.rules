
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document upon signup.
      allow create: if request.auth.uid == userId;

      // Users can read their own data. Admins can read any user's data.
      allow read: if request.auth.uid == userId || isAdmin();

      // Users can't update their own role. Admins can update any user document.
      allow update: if (request.auth.uid == userId && request.resource.data.role == resource.data.role) || isAdmin();
      
      // Deleting users is disallowed for now.
      allow delete: if false;
    }

    // Rules for the 'modules' collection
    match /modules/{moduleId} {
        // Any authenticated user can read modules and their lessons.
        // The app's UI will handle locking/unlocking content based on subscription status.
        allow read: if request.auth.uid != null;

        // Only admins can create, update, or delete modules.
        allow write: if isAdmin();
    }
  }
}
