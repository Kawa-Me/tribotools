
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      // Verifica se o usuário está autenticado e se o seu documento na coleção 'users' tem a role 'admin'.
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /modules/{moduleId} {
      // Qualquer usuário autenticado pode ler os módulos.
      allow read: if isAuthenticated();
      // Apenas administradores podem escrever nos módulos.
      allow write: if isAdmin();
    }

    match /users/{userId} {
      // O usuário pode criar seu próprio documento (cadastro).
      allow create: if isAuthenticated() && request.auth.uid == userId;

      // O usuário pode ler seu próprio documento.
      // O administrador pode ler qualquer documento de usuário.
      allow get: if (isAuthenticated() && request.auth.uid == userId) || isAdmin();
      
      // Apenas administradores podem listar todos os usuários (para o painel de admin).
      allow list: if isAdmin();

      // O administrador pode atualizar qualquer usuário.
      // O webhook (não autenticado) também pode atualizar um usuário para ativar a assinatura.
      // ATENÇÃO: A permissão 'request.auth == null' é necessária para a arquitetura atual do webhook,
      // mas deve ser tratada com cuidado em produção, idealmente usando um segredo ou Cloud Function.
      allow update: if isAdmin() || request.auth == null;
    }
  }
}
