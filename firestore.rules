rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserAdmin() {
      // Check if the user is authenticated, has a user document, and their role is 'admin'.
      return isUserAuthenticated()
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // A user can read or update their own document.
      allow read, update: if isUserAuthenticated() && request.auth.uid == userId;
      // Only admins can list, create, or delete user documents.
      allow list, write, delete: if isUserAdmin();
    }
    
    match /modules/{moduleId} {
      // Any authenticated user can read or list modules.
      // This is safe because the content itself is protected by the app logic (isUnlocked flag)
      allow read, list: if isUserAuthenticated();
      // Only admins can write or delete modules.
      allow write, delete: if isUserAdmin();
    }
  }
}
