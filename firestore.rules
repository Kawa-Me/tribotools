
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /modules/{moduleId} {
      // Any authenticated user (including anonymous) can read modules.
      allow get, list: if request.auth != null;
      
      // Only admins can write modules.
      allow write: if isAdmin();
    }

    match /users/{userId} {
      // User can create their own document on signup.
      allow create: if request.auth.uid == userId;

      // User can read their own data. Admins can read any user's data.
      allow get: if request.auth.uid == userId || isAdmin();
      
      // A user can update their own data. Admins can update any user's data.
      // NOTE: This rule is intentionally broad for simplicity. In a real-world scenario,
      // you'd likely restrict which fields a user can update.
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Only admins can list all users for the admin panel.
      allow list: if isAdmin();
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }
  }
}
