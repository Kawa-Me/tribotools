rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if a user is an admin.
    // This is safer as it checks for auth, doc existence, and role key existence.
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             'role' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Modules collection
    match /modules/{moduleId} {
      // Any authenticated user (including anonymous visitors) can list and read modules.
      // This is required for the dashboard to load for everyone.
      // The app itself protects the actual lesson content based on subscription status.
      allow get, list: if request.auth != null;
      
      // Only admins can create, update, or delete modules.
      allow write: if isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // A user can get their own document. An admin can get any document.
      allow get: if request.auth.uid == userId || isAdmin();
      
      // Only an admin can list all users for the admin panel.
      allow list: if isAdmin();
      
      // A user can create their own document upon signup.
      allow create: if request.auth.uid == userId;
      
      // A user can update their own document, and an admin can update any document.
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Deletion from the client is not allowed for safety.
      allow delete: if false;
    }
  }
}
