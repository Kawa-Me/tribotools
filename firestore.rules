
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin.
    // It safely checks if the document exists before accessing its data.
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- MODULES COLLECTION ---
    match /modules/{moduleId} {
      // Any authenticated user can read (get and list) all modules.
      allow read: if request.auth != null;
      // Only admins can create, update, or delete modules.
      allow write: if isAdmin();
    }

    // --- USERS COLLECTION ---
    match /users/{userId} {
      // Rule to allow admins to list all documents in the 'users' collection.
      // This is crucial for the admin panel.
      allow list: if isAdmin();
      
      // Rule to allow a user to get their own document, and admins to get any document.
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Rule to allow a user to create their own document upon signup.
      // The document ID (userId) must match the authenticated user's ID for security.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Rule to allow admins to update any user's document.
      // Note: The webhook needs to use the Firebase Admin SDK to bypass security rules.
      allow update: if isAdmin();

      // Rule to allow admins to delete user documents.
      allow delete: if isAdmin();
    }
  }
}
